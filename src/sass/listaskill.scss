.lista-skill{
  margin: 0 auto;

  display: flex;
  flex-direction: column;
  align-items: center;
}

.itemSkill{
  width: 60px;
  height: 60px;
  border: 10px solid $cor-subtexto;
  border-radius: 60px;
  position: relative;
  margin: auto;
  margin-top: 0.5em;
}

.skillTxt{
  @extend %texto;
  font-size:18px;
  margin: 5px auto;
}
.wrapper {
  width: 100px; /* Set the size of the progress bar */
  height: 100px;
  position: absolute; /* Enable clipping */
  clip: rect(0px, 100px, 100px, 50px); /* Hide half of the progress bar */
  left: -10px;
  top: -10px;
}
/* Set the sizes of the elements that make up the progress bar */
.circle {
  width: 60px;
  height: 60px;
  border: 10px solid $cor-principal;
  border-radius: 60px;
  position: absolute;
  clip: rect(0px, 50px, 100px, 0px);
}

.txtSkill{
  margin: 0 auto;
  color: $cor-subtexto;
  text-align: center;
}
/* Using the data attributes for the animation selectors. */
/* Base settings for all animated elements */
div[data-anim~=base] {
  animation-iteration-count: 1;  /* Only run once */
  animation-fill-mode: forwards; /* Hold the last keyframe */
  animation-timing-function: linear; /* Linear animation */
}

.wrapper[data-anim~=wrapper] {
  animation-duration: 0.01s; /* Complete keyframes asap */
  animation-delay: 1s; /* Wait half of the animation */
  animation-name: close-wrapper; /* Keyframes name */
}

.circle[data-anim~=left] {
  animation-duration: 0.5s; /* Full animation time */
  animation-delay: 1s;
  animation-name: left-spin;

}
.circle[data-anim~=left60] {
  animation-duration: 1s; /* Full animation time */
  animation-delay: 0.9s;
  animation-name: deg60;

}

.circle[data-anim~=right] {
  animation-duration: 1s; /* Half animation time */
  animation-name: right-spin;

}
/* Rotate the right side of the progress bar from 0 to 180 degrees */
@keyframes right-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(180deg);
  }
}
/* Rotate the left side of the progress bar from 0 to 360 degrees */
@keyframes left-spin {
  from {
    transform: rotate(180deg);
  }
  to {
    transform: rotate(270deg);
  }
}
@keyframes deg60{
 from {
   transform: rotate(180deg);
 }
 to {
   transform: rotate(210deg);
 }
}
/* Set the wrapper clip to auto, effectively removing the clip */
@keyframes close-wrapper {
  to {
    clip: rect(auto, auto, auto, auto);
  }
}